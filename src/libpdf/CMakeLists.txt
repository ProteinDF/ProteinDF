set(LIBPDF_HEADERS
  common.h
  datatype.h
  df_cdk_matrix.h
  df_total_energy_eigen.h
  df_total_energy_lapack.h
  df_total_energy_tmpl.h
  CnError.h
  CnFile.h
  DfCD.h
  DfCalcGrid.h
  DfCalcGridX.h
  DfCleanup.h
  DfConvcheck.h
  DfConverge.h
  DfConverge_Anderson.h
  DfConverge_DIIS.h
  DfConverge_Damping.h
  DfCqclomatrix.h
  DfDensityFittingObject.h
  DfDensityFittingX.h
  DfDiagonal.h
  DfDiffDensityMatrix.h
  DfDmatrix.h
  DfEngineObject.h
  DfEriEngine.h
  DfEriObject.h
  DfEriX.h
  DfFockMatrix.h
  DfForce.h
  DfFunctional.h
  DfFunctional_B3LYP.h
  DfFunctional_B88LYP.h
  DfFunctional_Becke88.h
  DfFunctional_Becke88_ExceptLDA.h
  DfFunctional_HFS.h
  DfFunctional_LYP.h
  DfFunctional_PW91X.h
  DfFunctional_SVWN.h
  DfFunctional_Slater.h
  DfFunctional_VWN.h
  DfFunctional_VWN3.h
  DfGenerateGrid.h
  DfGridFreeXC.h
  DfHpqEngine.h
  DfHpqX.h
  DfInfo.h
  DfInitialGuess.h
  DfInitialGuessHarris.h
  DfInitialGuessHuckel.h
  DfInputdata.h
  DfIntegrals.h
  DfInvMatrix.h
  DfJMatrix.h
  DfKMatrix.h
  DfLevelshift.h
  DfObject.h
  DfOverlapEngine.h
  DfOverlapX.h
  DfPopulation.h
  DfPreScf.h
  DfQclo.h
  DfScf.h
  DfSummary.h
  DfTaskCtrl.h
  DfThreeindexintegrals.h
  DfTotalEnergy.h
  DfTransFmatrix.h
  DfTransatob.h
  DfXCFunctional.h
  DfXMatrix.h
  DfXcenefitting.h
  Fl_Db_Basis.h
  Fl_Fragment.h
  Fl_Geometry.h
  Fl_Gto.h
  Fl_Tbl_AtomFragment.h
  Fl_Tbl_Fragment.h
  Fl_Vct_OtableX.h
  Fl_Vct_Table.h
  PdfKeyword.h
  PdfUserInput.h
  PdfUtils.h
  ProteinDF.h
  TlAngularMomentumVector.h
  TlAngularMomentumVectorSet.h
  TlCombineDensityMatrix.h
  TlMatrixCache.h
  TlOrbitalInfo.h
  TlOrbitalInfoObject.h
  TlOrbitalInfo_Density.h
  TlOrbitalInfo_XC.h
  )


set(LIBPDF_SOURCES
  df_cdk_matrix.cc
  df_total_energy_eigen.cc
  df_total_energy_lapack.cc
  CnError.cpp
  CnFile.cc
  DfCD.cpp
  DfCalcGrid.cpp
  DfCalcGridX.cpp
  DfCleanup.cpp
  DfConvcheck.cpp
  DfConverge.cpp
  DfConverge_Anderson.cpp
  DfConverge_DIIS.cpp
  DfConverge_Damping.cpp
  DfCqclomatrix.cpp
  DfDensityFittingX.cpp
  DfDiagonal.cpp
  DfDiffDensityMatrix.cpp
  DfDmatrix.cpp
  DfEriEngine.cpp
  DfEriX.cpp
  DfFockMatrix.cpp
  DfForce.cpp
  DfFunctional.cpp
  DfFunctional_B3LYP.cpp
  DfFunctional_B88LYP.cpp
  DfFunctional_Becke88.cpp
  DfFunctional_Becke88_ExceptLDA.cpp
  DfFunctional_HFS.cpp
  DfFunctional_LYP.cpp
  DfFunctional_PW91X.cpp
  DfFunctional_SVWN.cpp
  DfFunctional_Slater.cpp
  DfFunctional_VWN.cpp
  DfFunctional_VWN3.cpp
  DfGenerateGrid.cpp
  DfGridFreeXC.cpp
  DfHpqEngine.cpp
  DfHpqX.cpp
  DfInfo.cpp
  DfInitialGuess.cpp
  DfInitialGuessHarris.cpp
  DfInitialGuessHuckel.cpp
  DfInputdata.cpp
  DfIntegrals.cpp
  DfInvMatrix.cpp
  DfJMatrix.cpp
  DfKMatrix.cpp
  DfLevelshift.cpp
  DfObject.cpp
  DfOverlapEngine.cpp
  DfOverlapX.cpp
  DfPopulation.cpp
  DfPreScf.cpp
  DfQclo.cpp
  DfScf.cpp
  DfSummary.cpp
  DfTaskCtrl.cpp
  DfThreeindexintegrals.cpp
  DfTotalEnergy.cpp
  DfTransFmatrix.cpp
  DfTransatob.cpp
  DfXCFunctional.cpp
  DfXMatrix.cpp
  DfXcenefitting.cpp
  Fl_Db_Basis.cpp
  Fl_Fragment.cpp
  Fl_Geometry.cpp
  Fl_Gto.cpp
  Fl_Tbl_AtomFragment.cpp
  Fl_Tbl_Fragment.cpp
  Fl_Vct_OtableX.cpp
  Fl_Vct_Table.cpp
  PdfKeyword.cpp
  PdfUserInput.cpp
  PdfUtils.cpp
  ProteinDF.cpp
  TlAngularMomentumVector.cpp
  TlAngularMomentumVectorSet.cpp
  TlCombineDensityMatrix.cpp
  TlMatrixCache.cpp
  TlOrbitalInfo.cpp
  TlOrbitalInfoObject.cpp
  TlOrbitalInfo_Density.cpp
  TlOrbitalInfo_XC.cpp
  )


set(LIBPPDF_HEADERS
  df_total_energy_scalapack.h
  CnFile_parallel.h
  DfCD_Parallel.h
  DfCalcGridX_Parallel.h
  DfCleanup_Parallel.h
  DfConvcheck_Parallel.h
  DfConverge_Anderson_Parallel.h
  DfConverge_Damping_Parallel.h
  DfDensityFittingX_Parallel.h
  DfDensityFittingX_ScaLAPACK.h
  DfDiagonal_Parallel.h
  DfDiffDensityMatrix_Parallel.h
  DfDmatrix_Parallel.h
  DfEriX_Parallel.h
  DfFockMatrix_Parallel.h
  DfForce_Parallel.h
  DfGenerateGrid_Parallel.h
  DfGridFreeXC_Parallel.h
  DfHpqX_Parallel.h
  DfInitialGuess_Parallel.h
  DfInitialGuessHarris_Parallel.h
  DfInitialGuessHuckel_Parallel.h
  DfInputdata_Parallel.h
  DfIntegrals_Parallel.h
  DfInvMatrix_Parallel.h
  DfJMatrix_Parallel.h
  DfKMatrix_Parallel.h
  DfOverlapX_Parallel.h
  DfPopulation_Parallel.h
  DfPreScf_Parallel.h
  DfScf_Parallel.h
  DfSummary_Parallel.h
  DfTaskCtrl_Parallel.h
  DfTotalEnergy_Parallel.h
  DfTransFmatrix_Parallel.h
  DfTransatob_Parallel.h
  DfXCFunctional_Parallel.h
  DfXMatrix_Parallel.h
  ProteinDF_Parallel.h
  )


set(LIBPPDF_SOURCES
  df_total_energy_scalapack.cc
  CnFile_parallel.cc
  DfCD_Parallel.cpp
  DfCalcGridX_Parallel.cpp
  DfCleanup_Parallel.cpp
  DfConvcheck_Parallel.cpp
  DfConverge_Anderson_Parallel.cpp
  DfConverge_Damping_Parallel.cpp
  DfDensityFittingX_Parallel.cpp
  DfDensityFittingX_ScaLAPACK.cpp
  DfDiagonal_Parallel.cpp
  DfDiffDensityMatrix_Parallel.cpp
  DfDmatrix_Parallel.cpp
  DfEriX_Parallel.cpp
  DfFockMatrix_Parallel.cpp
  DfForce_Parallel.cpp
  DfGenerateGrid_Parallel.cpp
  DfGridFreeXC_Parallel.cpp
  DfHpqX_Parallel.cpp
  DfInitialGuessHarris_Parallel.cpp
  DfInitialGuessHuckel_Parallel.cpp
  DfInitialGuess_Parallel.cpp
  DfInputdata_Parallel.cpp
  DfIntegrals_Parallel.cpp
  DfInvMatrix_Parallel.cpp
  DfJMatrix_Parallel.cpp
  DfKMatrix_Parallel.cpp
  DfOverlapX_Parallel.cpp
  DfPopulation_Parallel.cpp
  DfPreScf_Parallel.cpp
  DfScf_Parallel.cpp
  DfSummary_Parallel.cpp
  DfTaskCtrl_Parallel.cpp
  DfTotalEnergy_Parallel.cpp
  DfTransFmatrix_Parallel.cpp
  DfTransatob_Parallel.cpp
  DfXCFunctional_Parallel.cpp
  DfXMatrix_Parallel.cpp
  ProteinDF_Parallel.cpp
  )

set(LIBPDF_LIBRARIES
  libpdftl
)

if (EIGEN3_FOUND)
  set(LIBPDF_HEADERS
    ${LIBPDF_HEADERS}
    df_total_energy_eigen.h
  )

  set(LIBPDF_SOURCES
    ${LIBPDF_SOURCES}
    df_total_energy_eigen.cc
  )
endif (EIGEN3_FOUND)

# libcint
if (LIBCINT_FOUND)
  set(LIBPDF_HEADERS
    ${LIBPDF_HEADERS}
    tl_libcint.h
  )
  set(LIBPDF_SOURCES
    ${LIBPDF_SOURCES}
    tl_libcint.cpp
  )  
  set(LIBPDF_LIBRARIES
    ${LIBPDF_LIBRARIES}
    ${LIBCINT_LIBRARIES}
  )
endif()

# libpdf
add_library(libpdf 
  ${LIBPDF_HEADERS} 
  ${LIBPDF_SOURCES}
  )
target_link_libraries(libpdf INTERFACE
  ${LIBPDF_LIBRARIES}
  )
set_target_properties(libpdf PROPERTIES OUTPUT_NAME "pdf")

if (LIBCINT_FOUND)
  target_include_directories(libpdf PUBLIC ${LIBCINT_INCLUDE_DIR})
endif()

# libppdf
if (MPI_FOUND)
  add_library(libppdf 
    ${LIBPPDF_HEADERS} 
    ${LIBPPDF_SOURCES}
    )
  target_link_libraries(libppdf INTERFACE
    ${LIBPDF_LIBRARIES}
    libppdftl
    )
    set_target_properties(libppdf PROPERTIES OUTPUT_NAME "ppdf")
endif()

#  DfEnergyWeightedDensityMatrix.h
#  DfEnergyWeightedDensityMatrix.cpp
#  DfGrid_Common.cpp
#  DfRLMO.cpp
#  DfRLMO.h
